@model asyncDrive.Web.Models.DTO.CreateUserDto

<h2>Create User</h2>

<form asp-action="CreateUser" method="post">
    <div class="form-group">
        <label asp-for="UserName"></label>
        <input asp-for="UserName" class="form-control" />
        <span asp-validation-for="UserName" class="text-danger"></span>

        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>

        <label asp-for="Password"></label>
        <input asp-for="Password" type="password" class="form-control" />
        <span asp-validation-for="Password" class="text-danger"></span>

        <div class="form-group">
            @Html.LabelFor(m => m.SelectedRoleId, "Role")
            @Html.DropDownListFor(m => m.SelectedRoleId, Model.Roles ?? new List<SelectListItem>(), "Select Role", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SelectedRoleId, "", new { @class = "text-danger" })
        </div>
    </div>
    <button type="submit" class="btn btn-success mt-2">Create User</button>
</form>

<a class="btn btn-secondary mt-2" asp-controller="Users" asp-action="AllUsers">Back to Users</a>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
